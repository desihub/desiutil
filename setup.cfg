[metadata]
name = desiutil
version = attr: desiutil.__version__
author = DESI Collaboration
author_email = desi-data@desi.lbl.gov
license = BSD-3-Clause
license_files = LICENSE.rst
url = https://github.com/desihub/desiutil
description = DESI utilities package
long_description = file: README.rst
long_description_content_type = text/x-rst
edit_on_github = True
github_project = desihub/desiutil
classifiers =
    Development Status :: 5 - Production/Stable
    Environment :: Console
    Intended Audience :: Science/Research
    Operating System :: OS Independent
    Programming Language :: Python :: 3
    Topic :: Scientific/Engineering :: Astronomy
    Topic :: System :: Software Distribution
    Topic :: Utilities

[options]
zip_safe = True
package_dir =
    =py
packages = find:
include_package_data = True
python_requires = >=3.10
# setup_requires = setuptools_scm
install_requires =
    requests
    pyyaml
    astropy<7
scripts =
    bin/annotate_fits
    bin/desi_api_file
    bin/desi_module_file
    bin/desi_update_version
    bin/desiBootstrap.sh
    bin/desiInstall
    bin/fix_permissions.sh
    bin/update_iers_frozen

# [options.entry_points]
# console_scripts =
#     annotate_fits = desiutil.annotate:main
#     desiInstall = desiutil.install:main
#     desi_api_file = desiutil.api:main
#     desi_module_file = desiutil.modules:main
#     desi_update_version = desiutil.setup:main

[options.extras_require]
all =
    healpy
    matplotlib
    scipy
    speclite
test =
    desiutil[all]
    pytest
coverage =
    desiutil[all]
    pytest-cov
    coveralls
doc =
    Sphinx
    sphinx-rtd-theme

[options.package_data]
desiutil = data/*
desiutil.test = t/*

[options.packages.find]
where = py
exclude = .github/*

[coverage:run]
relative_files = True
source =
    py/desiutil
omit =
    py/desiutil/_version.py
    py/desiutil/conftest*
    py/desiutil/test/*
    */desiutil/_version.py
    */desiutil/conftest*
    */desiutil/test/*

# [coverage:paths]
# source =
#     py/desiutil/
#     */site-packages/desiutil/

[coverage:report]
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover
    # Don't complain about packages we have installed
    except ImportError
    # Don't complain if tests don't hit assertions
    raise AssertionError
    raise NotImplementedError
    # Don't complain about script hooks
    def main\(.*\):
    # Ignore branches that don't pertain to this version of Python
    pragma: py{ignore_python_version}
    # Don't complain about IPython completion helper
    def _ipython_key_completions_

[pycodestyle]
# See https://pycodestyle.readthedocs.io/en/latest/intro.html#configuration
# for details of these configuration options.
#
# These are normally ignored by default:
# ignore = E121, E123, E126, E133, E226, E241, E242, E704, W503, W504
#
# These are the explicitly ignored styles:
# - E226: missing whitespace around arithmetic operator
# - E241: multiple spaces after ','
# - E741: ambiguous variable name 'l', see desutil.dust._Hemisphere.ebv().
# - W504: line break after binary operator
#
# And finally this one is not ignored, but modified by max-line-length.
# - E501: line too long (82 > 79 characters)
max-line-length = 160
ignore = E226, E241, E741, W504
